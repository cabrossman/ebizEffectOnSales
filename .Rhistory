mydata_s2s <- sqldf(' select a.* from mydata_s2s a left join mydata2_s2s b on a.ZKEY = b.ZKEY WHERE b.ZKEY is null')
#mydata2_s2s <- sqldf('select distinct ZKEY from mydata_s2s')
#mydata2_s2s$prob <- runif(nrow(mydata2_s2s))
#mydata_s2s <- sqldf(' select a.* from mydata_s2s a join mydata2_s2s b on a.ZKEY = b.ZKEY where b.prob <= .25')
f3 <- log(CUST_SLS_TM) ~ S2S_CURRENT_CUST + log(BRANCH_SLS_TM) + TREND + YEARMONTH
plm3 <- plm(f3,data = mydata_s2s, index = c("ZKEY","YEARMONTH"), model="within"); summary(plm3)
###################### CORRECT STANDARD ERRORS ##########################
coefSTDerr <- function(dataframe,model){
G <- length(unique(dataframe$ACCOUNT_NAME))
N <- length(dataframe$ACCOUNT_NAME)
dfa <- (G/(G - 1)) * (N - 1)/ model$df.residual
c_vcov <- dfa*vcovHC(model, type = "HC0", cluster = "group", adjust = T)
return(coeftest(model, vcov = c_vcov))
}
plm3_se <- coefSTDerr(mydata_s2s,plm3); plm3_se
require(RJDBC)
library(plm)
library(sqldf)
library(MatchIt)
library(dplyr)
library(stringr)
library(tidyr)
library(reshape2)
library(lmtest)
library(sandwich)
library(AER)
library(systemfit)
install.packages("lmtest")
install.packages("lmtest")
install.packages("sandwich")
install.packages("sandwich")
require(RJDBC)
library(plm)
library(sqldf)
library(MatchIt)
library(dplyr)
library(stringr)
library(tidyr)
library(reshape2)
library(lmtest)
library(sandwich)
library(AER)
library(systemfit)
library(lmtest)
install.packages("lmtest")
library(lmtest)
install.packages("lmtest")
require(RJDBC)
library(plm)
library(sqldf)
library(MatchIt)
library(dplyr)
library(stringr)
library(tidyr)
library(reshape2)
library(lmtest)
library(sandwich)
library(AER)
library(systemfit)
################ Get Data ####################################
print("Establishing Connections")
CLASSPATH <- "C:\\Users\\aai8260\\Desktop\\JAVA\\ojdbc6.jar"
driver <- JDBC("oracle.jdbc.driver.OracleDriver",classPath= CLASSPATH," ")
UID = "AAI8260"
#APPEX
URL = "jdbc:oracle:thin:@a05129.sys.ds.wolseley.com:1550:APXPRD00"
PASS = "J321C#i"
con <- dbConnect(driver,URL,UID,PASS)
#DWFEI
URL2 = "jdbc:oracle:thin:@nnldwp01.sys.ds.wolseley.com:1521:DWFEI"
PASS2 = "PA55W0RD"
con2 <- dbConnect(driver,URL2,UID,PASS2)
#################read in SQL###############################
print("Getting DiD Data")
path3 <- 'S:\\eCommerce\\E-Commerce\\Analysis & Reporting\\Omni-Channel\\eBiz effect on FEI sls\\s2s_share.sql'
SQL3 <- readChar(path3, file.info(path3)$size)
mydata_s2s <- dbGetQuery(con,SQL3)
###################### change necessary fields to factors ##########################
print("Converting Chars to Factors")
for(i in 1:length(mydata_s2s)){
if(length(levels(factor(mydata_s2s[,i]))) < 5){mydata_s2s[,i] <- factor(mydata_s2s[,i])}
if(class(mydata_s2s[,i]) == 'character'){mydata_s2s[,i] <- factor(mydata_s2s[,i])}
}
###################### ANALYZE DATA ##########################
mydata2_s2s <- sqldf('select ZKEY from mydata_s2s where TREND = 1 and s2s_CURRENT_CUST = 1')
mydata_s2s <- sqldf(' select a.* from mydata_s2s a left join mydata2_s2s b on a.ZKEY = b.ZKEY WHERE b.ZKEY is null')
#mydata2_s2s <- sqldf('select distinct ZKEY from mydata_s2s')
#mydata2_s2s$prob <- runif(nrow(mydata2_s2s))
#mydata_s2s <- sqldf(' select a.* from mydata_s2s a join mydata2_s2s b on a.ZKEY = b.ZKEY where b.prob <= .25')
f3 <- log(CUST_SLS_TM) ~ S2S_CURRENT_CUST + log(BRANCH_SLS_TM) + TREND + YEARMONTH
plm3 <- plm(f3,data = mydata_s2s, index = c("ZKEY","YEARMONTH"), model="within"); summary(plm3)
###################### CORRECT STANDARD ERRORS ##########################
coefSTDerr <- function(dataframe,model){
G <- length(unique(dataframe$ACCOUNT_NAME))
N <- length(dataframe$ACCOUNT_NAME)
dfa <- (G/(G - 1)) * (N - 1)/ model$df.residual
c_vcov <- dfa*vcovHC(model, type = "HC0", cluster = "group", adjust = T)
return(coeftest(model, vcov = c_vcov))
}
plm3_se <- coefSTDerr(mydata_s2s,plm3); plm3_se
################## required packages################################
print("Loading Libraries")
#packages <- c("RJDBC","plm","sqldf","MatchIt","dplyr","stringr","tidyr","reshape2","lmtest","sandwich","AER","systemfit")
#install.packages(packages)
require(RJDBC)
library(plm)
library(sqldf)
library(MatchIt)
library(dplyr)
library(stringr)
library(tidyr)
library(reshape2)
library(lmtest)
library(sandwich)
library(AER)
library(systemfit)
################ Get Data ####################################
print("Establishing Connections")
CLASSPATH <- "C:\\Users\\aai8260\\Desktop\\JAVA\\ojdbc6.jar"
driver <- JDBC("oracle.jdbc.driver.OracleDriver",classPath= CLASSPATH," ")
UID = "AAI8260"
#APPEX
URL = "jdbc:oracle:thin:@a05129.sys.ds.wolseley.com:1550:APXPRD00"
PASS = "J321C#i"
con <- dbConnect(driver,URL,UID,PASS)
#DWFEI
URL2 = "jdbc:oracle:thin:@nnldwp01.sys.ds.wolseley.com:1521:DWFEI"
PASS2 = "PA55W0RD"
con2 <- dbConnect(driver,URL2,UID,PASS2)
#################read in SQL###############################
print("Getting DiD Data")
path <- 'S:\\eCommerce\\E-Commerce\\Analysis & Reporting\\Omni-Channel\\eBiz effect on FEI sls\\eBiz_share.sql'
SQL <- readChar(path, file.info(path)$size)
mydata <- dbGetQuery(con,SQL)
###################### change necessary fields to factors ##########################
print("Converting Chars to Factors")
for(i in 1:length(mydata)){
if(length(levels(factor(mydata[,i]))) < 5){mydata[,i] <- factor(mydata[,i])}
if(class(mydata[,i]) == 'character'){mydata[,i] <- factor(mydata[,i])}
}
###################### ANALYZE DATA ##########################
mydata2 <- sqldf('select ZKEY from mydata where TREND = 1 and EBIZ_CURRENT_CUST = 1')
mydata <- sqldf(' select a.* from mydata a left join mydata2 b on a.ZKEY = b.ZKEY WHERE b.ZKEY is null')
#mydata2 <- sqldf('select distinct ZKEY from mydata')
#mydata2$prob <- runif(nrow(mydata2))
#mydata <- sqldf(' select a.* from mydata a join mydata2 b on a.ZKEY = b.ZKEY where b.prob <= .25')
f1 <- log(CUST_SLS_TM) ~ EBIZ_CURRENT_CUST + log(BRANCH_SLS_TM) + TREND + YEARMONTH
plm1 <- plm(f1,data = mydata, index = c("ZKEY","YEARMONTH"), model="within"); summary(plm1)
###################### CORRECT STANDARD ERRORS ##########################
coefSTDerr <- function(dataframe,model){
G <- length(unique(dataframe$ACCOUNT_NAME))
N <- length(dataframe$ACCOUNT_NAME)
dfa <- (G/(G - 1)) * (N - 1)/ model$df.residual
c_vcov <- dfa*vcovHC(model, type = "HC0", cluster = "group", adjust = T)
return(coeftest(model, vcov = c_vcov))
}
plm1_se <- coefSTDerr(mydata,plm1); plm1_se
################## required packages################################
print("Loading Libraries")
#packages <- c("RJDBC","plm","sqldf","MatchIt","dplyr","stringr","tidyr","reshape2","lmtest","sandwich","AER","systemfit")
#install.packages(packages)
require(RJDBC)
library(plm)
library(sqldf)
library(MatchIt)
library(dplyr)
library(stringr)
library(tidyr)
library(reshape2)
library(lmtest)
library(sandwich)
library(AER)
library(systemfit)
################ Get Data ####################################
print("Establishing Connections")
CLASSPATH <- "C:\\Users\\aai8260\\Desktop\\JAVA\\ojdbc6.jar"
driver <- JDBC("oracle.jdbc.driver.OracleDriver",classPath= CLASSPATH," ")
UID = "AAI8260"
#APPEX
URL = "jdbc:oracle:thin:@a05129.sys.ds.wolseley.com:1550:APXPRD00"
PASS = "J321C#i"
con <- dbConnect(driver,URL,UID,PASS)
#DWFEI
URL2 = "jdbc:oracle:thin:@nnldwp01.sys.ds.wolseley.com:1521:DWFEI"
PASS2 = "PA55W0RD"
con2 <- dbConnect(driver,URL2,UID,PASS2)
#################read in SQL###############################
print("Getting DiD Data")
path3 <- 'S:\\eCommerce\\E-Commerce\\Analysis & Reporting\\Omni-Channel\\eBiz effect on FEI sls\\s2s_share.sql'
SQL3 <- readChar(path3, file.info(path3)$size)
mydata_s2s <- dbGetQuery(con,SQL3)
###################### change necessary fields to factors ##########################
print("Converting Chars to Factors")
for(i in 1:length(mydata_s2s)){
if(length(levels(factor(mydata_s2s[,i]))) < 5){mydata_s2s[,i] <- factor(mydata_s2s[,i])}
if(class(mydata_s2s[,i]) == 'character'){mydata_s2s[,i] <- factor(mydata_s2s[,i])}
}
###################### ANALYZE DATA ##########################
mydata2_s2s <- sqldf('select ZKEY from mydata_s2s where TREND = 1 and s2s_CURRENT_CUST = 1')
mydata_s2s <- sqldf(' select a.* from mydata_s2s a left join mydata2_s2s b on a.ZKEY = b.ZKEY WHERE b.ZKEY is null')
#mydata2_s2s <- sqldf('select distinct ZKEY from mydata_s2s')
#mydata2_s2s$prob <- runif(nrow(mydata2_s2s))
#mydata_s2s <- sqldf(' select a.* from mydata_s2s a join mydata2_s2s b on a.ZKEY = b.ZKEY where b.prob <= .25')
f3 <- log(CUST_SLS_TM) ~ S2S_CURRENT_CUST + log(BRANCH_SLS_TM) + TREND + YEARMONTH
plm3 <- plm(f3,data = mydata_s2s, index = c("ZKEY","YEARMONTH"), model="within"); summary(plm3)
###################### CORRECT STANDARD ERRORS ##########################
coefSTDerr <- function(dataframe,model){
G <- length(unique(dataframe$ACCOUNT_NAME))
N <- length(dataframe$ACCOUNT_NAME)
dfa <- (G/(G - 1)) * (N - 1)/ model$df.residual
c_vcov <- dfa*vcovHC(model, type = "HC0", cluster = "group", adjust = T)
return(coeftest(model, vcov = c_vcov))
}
plm3_se <- coefSTDerr(mydata_s2s,plm3); plm3_se
################## required packages################################
print("Loading Libraries")
#packages <- c("RJDBC","plm","sqldf","MatchIt","dplyr","stringr","tidyr","reshape2","lmtest","sandwich","AER","systemfit")
#install.packages(packages)
require(RJDBC)
library(plm)
library(sqldf)
library(MatchIt)
library(dplyr)
library(stringr)
library(tidyr)
library(reshape2)
library(lmtest)
library(sandwich)
library(AER)
library(systemfit)
################ Get Data ####################################
print("Establishing Connections")
CLASSPATH <- "C:\\Users\\aai8260\\Desktop\\JAVA\\ojdbc6.jar"
driver <- JDBC("oracle.jdbc.driver.OracleDriver",classPath= CLASSPATH," ")
UID = "AAI8260"
#APPEX
URL = "jdbc:oracle:thin:@a05129.sys.ds.wolseley.com:1550:APXPRD00"
PASS = "J321C#i"
con <- dbConnect(driver,URL,UID,PASS)
#DWFEI
URL2 = "jdbc:oracle:thin:@nnldwp01.sys.ds.wolseley.com:1521:DWFEI"
PASS2 = "PA55W0RD"
con2 <- dbConnect(driver,URL2,UID,PASS2)
#################read in SQL###############################
print("Getting DiD Data")
path2 <- 'S:\\eCommerce\\E-Commerce\\Analysis & Reporting\\Omni-Channel\\eBiz effect on FEI sls\\fol_share2.sql'
SQL2 <- readChar(path2, file.info(path2)$size)
mydata_fol <- dbGetQuery(con,SQL2)
###################### change necessary fields to factors ##########################
print("Converting Chars to Factors")
for(i in 1:length(mydata_fol)){
if(length(levels(factor(mydata_fol[,i]))) < 5){mydata_fol[,i] <- factor(mydata_fol[,i])}
if(class(mydata_fol[,i]) == 'character'){mydata_fol[,i] <- factor(mydata_fol[,i])}
}
###################### ANALYZE DATA ##########################
mydata2_fol <- sqldf('select ZKEY from mydata_fol where TREND = 1 and FOL_CURRENT_CUST = 1')
mydata_fol <- sqldf(' select a.* from mydata_fol a left join mydata2_fol b on a.ZKEY = b.ZKEY WHERE b.ZKEY is null')
#mydata2_fol <- sqldf('select distinct ZKEY from mydata_FOL')
#mydata2_fol$prob <- runif(nrow(mydata2_fol))
#mydata_fol <- sqldf(' select a.* from mydata_fol a join mydata2_fol b on a.ZKEY = b.ZKEY where b.prob <= .25')
f2 <- log(CUST_SLS_TM) ~ FOL_CURRENT_CUST + log(BRANCH_SLS_TM) + TREND + YEARMONTH
plm2 <- plm(f2,data = mydata_fol, index = c("ZKEY","YEARMONTH"), model="within"); summary(plm2)
###################### CORRECT STANDARD ERRORS ##########################
coefSTDerr <- function(dataframe,model){
G <- length(unique(dataframe$ACCOUNT_NAME))
N <- length(dataframe$ACCOUNT_NAME)
dfa <- (G/(G - 1)) * (N - 1)/ model$df.residual
c_vcov <- dfa*vcovHC(model, type = "HC0", cluster = "group", adjust = T)
return(coeftest(model, vcov = c_vcov))
}
plm2_se <- coefSTDerr(mydata_fol,plm2); plm2_se
################## required packages################################
print("Loading Libraries")
#packages <- c("RJDBC","plm","sqldf","MatchIt","dplyr","stringr","tidyr","reshape2")
#install.packages(packages)
require(RJDBC)
library(plm)
library(sqldf)
library(MatchIt)
library(dplyr)
library(stringr)
library(tidyr)
library(reshape2)
################ Get Data ####################################
print("Establishing Connections")
CLASSPATH <- "C:\\Users\\aai8260\\Desktop\\JAVA\\ojdbc6.jar"
driver <- JDBC("oracle.jdbc.driver.OracleDriver",classPath= CLASSPATH," ")
UID = "AAI8260"
#APPEX
URL = "jdbc:oracle:thin:@a05129.sys.ds.wolseley.com:1550:APXPRD00"
PASS = "J321C#i"
con <- dbConnect(driver,URL,UID,PASS)
#DWFEI
URL2 = "jdbc:oracle:thin:@nnldwp01.sys.ds.wolseley.com:1521:DWFEI"
PASS2 = "PA55W0RD"
con2 <- dbConnect(driver,URL2,UID,PASS2)
#################read in SQL###############################
print("Getting Matching 1 Data")
path <- 'S:\\eCommerce\\E-Commerce\\Analysis & Reporting\\Omni-Channel\\eBiz effect on FEI sls\\matchingSQL.sql'
SQL <- readChar(path, file.info(path)$size)
mydata <- dbGetQuery(con,SQL)
#mydata <- dbGetQuery(con,"select * from NORTH.X_EBIZ_SHARE")
###################### change necessary fields to factors ##########################
print("Converting Chars to Factors")
for(i in 1:length(mydata)){
if(length(levels(factor(mydata[,i]))) < 5){mydata[,i] <- factor(mydata[,i])}
if(class(mydata[,i]) == 'character'){mydata[,i] <- factor(mydata[,i])}
}
############################ matching #################################################
#note original filters exclude customer that do not match the following criteria in SQL
#where x.CNT_YM > 5
#and x.FEI_SLS > 10000
#and x.TOT_ORDERS > 10
#and x.TOT_LINES > 50
print("remove NA values")
mydata <- na.omit(mydata)
f1 <- EVER_EBIZ_CUST ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
f2 <- EVER_FOL_CUST ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
f3 <- EVER_S2S_CUST ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
f4 <- EVER_SILVER_FEI ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
f5 <- EVER_BR
################## required packages################################
print("Loading Libraries")
#packages <- c("RJDBC","plm","sqldf","MatchIt","dplyr","stringr","tidyr","reshape2")
#install.packages(packages)
require(RJDBC)
library(plm)
library(sqldf)
library(MatchIt)
library(dplyr)
library(stringr)
library(tidyr)
library(reshape2)
################ Get Data ####################################
print("Establishing Connections")
CLASSPATH <- "C:\\Users\\aai8260\\Desktop\\JAVA\\ojdbc6.jar"
driver <- JDBC("oracle.jdbc.driver.OracleDriver",classPath= CLASSPATH," ")
UID = "AAI8260"
#APPEX
URL = "jdbc:oracle:thin:@a05129.sys.ds.wolseley.com:1550:APXPRD00"
PASS = "J321C#i"
con <- dbConnect(driver,URL,UID,PASS)
#DWFEI
URL2 = "jdbc:oracle:thin:@nnldwp01.sys.ds.wolseley.com:1521:DWFEI"
PASS2 = "PA55W0RD"
con2 <- dbConnect(driver,URL2,UID,PASS2)
#################read in SQL###############################
print("Getting Matching 1 Data")
path <- 'S:\\eCommerce\\E-Commerce\\Analysis & Reporting\\Omni-Channel\\eBiz effect on FEI sls\\matchingSQL.sql'
SQL <- readChar(path, file.info(path)$size)
mydata <- dbGetQuery(con,SQL)
#mydata <- dbGetQuery(con,"select * from NORTH.X_EBIZ_SHARE")
###################### change necessary fields to factors ##########################
print("Converting Chars to Factors")
for(i in 1:length(mydata)){
if(length(levels(factor(mydata[,i]))) < 5){mydata[,i] <- factor(mydata[,i])}
if(class(mydata[,i]) == 'character'){mydata[,i] <- factor(mydata[,i])}
}
############################ matching #################################################
#note original filters exclude customer that do not match the following criteria in SQL
#where x.CNT_YM > 5
#and x.FEI_SLS > 10000
#and x.TOT_ORDERS > 10
#and x.TOT_LINES > 50
print("remove NA values")
mydata <- na.omit(mydata)
f1 <- EVER_EBIZ_CUST ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
f2 <- EVER_FOL_CUST ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
f3 <- EVER_S2S_CUST ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
f4 <- EVER_SILVER_FEI ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
f5 <- EVER_BRONZE_FEI ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
f6 <- HVAC_STAND_ALONE ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
f7 <- LYON ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
print("do the matching")
m.out4 <- matchit(f4, data = mydata,method = "nearest", ratio = 1)
################## required packages################################
print("Loading Libraries")
#packages <- c("RJDBC","plm","sqldf","MatchIt","dplyr","stringr","tidyr","reshape2")
#install.packages(packages)
require(RJDBC)
library(plm)
library(sqldf)
library(MatchIt)
library(dplyr)
library(stringr)
library(tidyr)
library(reshape2)
################ Get Data ####################################
print("Establishing Connections")
CLASSPATH <- "C:\\Users\\aai8260\\Desktop\\JAVA\\ojdbc6.jar"
driver <- JDBC("oracle.jdbc.driver.OracleDriver",classPath= CLASSPATH," ")
UID = "AAI8260"
#APPEX
URL = "jdbc:oracle:thin:@a05129.sys.ds.wolseley.com:1550:APXPRD00"
PASS = "J321C#i"
con <- dbConnect(driver,URL,UID,PASS)
#DWFEI
URL2 = "jdbc:oracle:thin:@nnldwp01.sys.ds.wolseley.com:1521:DWFEI"
PASS2 = "PA55W0RD"
con2 <- dbConnect(driver,URL2,UID,PASS2)
#################read in SQL###############################
print("Getting Matching 1 Data")
path <- 'S:\\eCommerce\\E-Commerce\\Analysis & Reporting\\Omni-Channel\\eBiz effect on FEI sls\\matchingSQL.sql'
SQL <- readChar(path, file.info(path)$size)
mydata <- dbGetQuery(con,SQL)
###################### change necessary fields to factors ##########################
print("Converting Chars to Factors")
for(i in 1:length(mydata)){
if(length(levels(factor(mydata[,i]))) < 5){mydata[,i] <- factor(mydata[,i])}
if(class(mydata[,i]) == 'character'){mydata[,i] <- factor(mydata[,i])}
}
############################ matching #################################################
#note original filters exclude customer that do not match the following criteria in SQL
#where x.CNT_YM > 5
#and x.FEI_SLS > 10000
#and x.TOT_ORDERS > 10
#and x.TOT_LINES > 50
print("remove NA values")
mydata <- na.omit(mydata)
f1 <- EVER_EBIZ_CUST ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
f2 <- EVER_FOL_CUST ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
f3 <- EVER_S2S_CUST ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
f4 <- EVER_SILVER_FEI ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
f5 <- EVER_BRONZE_FEI ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
f6 <- HVAC_STAND_ALONE ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
f7 <- LYON ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
m.out4 <- matchit(f4, data = mydata,method = "nearest", ratio = 1)
m.out5 <- matchit(f5, data = mydata,method = "nearest", ratio = 1)
m.out6 <- matchit(f6, data = mydata,method = "nearest", ratio = 1)
m.out7 <- matchit(f7, data = mydata,method = "nearest", ratio = 1)
View(mydata)
m.data4 <- match.data(m.out4)
m.data5 <- match.data(m.out5)
dbWriteTable(con2, m.data4$ZKEY, name = "MATCHED_ZKEYS_SILVER", append=TRUE, row.names=FALSE, overwrite=TRUE)
dbSendUpdate(con2,"ALTER TABLE AAI8260.MATCHED_ZKEYS_SILVER RENAME COLUMN VALUE TO ZKEY")
dbSendUpdate(con2,"grant select on AAI8260.MATCHED_ZKEYS_SILVER to public")
dbWriteTable(con2, m.data5$ZKEY, name = "MATCHED_ZKEYS_BRONZE", append=TRUE, row.names=FALSE, overwrite=TRUE)
dbSendUpdate(con2,"ALTER TABLE AAI8260.MATCHED_ZKEYS_BRONZE RENAME COLUMN VALUE TO ZKEY")
dbSendUpdate(con2,"grant select on AAI8260.MATCHED_ZKEYS_BRONZE to public")
################## required packages################################
print("Loading Libraries")
#packages <- c("RJDBC","plm","sqldf","MatchIt","dplyr","stringr","tidyr","reshape2")
#install.packages(packages)
require(RJDBC)
library(plm)
library(sqldf)
library(MatchIt)
library(dplyr)
library(stringr)
library(tidyr)
library(reshape2)
################ Get Data ####################################
print("Establishing Connections")
CLASSPATH <- "C:\\Users\\aai8260\\Desktop\\JAVA\\ojdbc6.jar"
driver <- JDBC("oracle.jdbc.driver.OracleDriver",classPath= CLASSPATH," ")
UID = "AAI8260"
#APPEX
URL = "jdbc:oracle:thin:@a05129.sys.ds.wolseley.com:1550:APXPRD00"
PASS = "J321C#i"
con <- dbConnect(driver,URL,UID,PASS)
#DWFEI
URL2 = "jdbc:oracle:thin:@nnldwp01.sys.ds.wolseley.com:1521:DWFEI"
PASS2 = "PA55W0RD"
con2 <- dbConnect(driver,URL2,UID,PASS2)
#################read in SQL###############################
print("Getting Matching 1 Data")
path <- 'S:\\eCommerce\\E-Commerce\\Analysis & Reporting\\Omni-Channel\\eBiz effect on FEI sls\\matchingSQL.sql'
SQL <- readChar(path, file.info(path)$size)
mydata <- dbGetQuery(con,SQL)
###################### change necessary fields to factors ##########################
print("Converting Chars to Factors")
for(i in 1:length(mydata)){
if(length(levels(factor(mydata[,i]))) < 5){mydata[,i] <- factor(mydata[,i])}
if(class(mydata[,i]) == 'character'){mydata[,i] <- factor(mydata[,i])}
}
############################ matching #################################################
#note original filters exclude customer that do not match the following criteria in SQL
#where x.CNT_YM > 5
#and x.FEI_SLS > 10000
#and x.TOT_ORDERS > 10
#and x.TOT_LINES > 50
print("remove NA values")
mydata <- na.omit(mydata)
f1 <- EVER_EBIZ_CUST ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
f2 <- EVER_FOL_CUST ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
f3 <- EVER_S2S_CUST ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
f4 <- EVER_SILVER_FEI ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
f5 <- EVER_BRONZE_FEI ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
f6 <- HVAC_STAND_ALONE ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
f7 <- LYON ~ DOM_TYPE_II + OS_HA + CREDIT_BIN + CNT_YM + I(log(SLS_PER_MONTH)) + I(log(SLS_PER_ORDER)) + I(log(SLS_PER_MONTH*SLS_PER_ORDER)) + PCT_JOB_SLS
m.out6 <- matchit(f6, data = mydata,method = "nearest", ratio = 1)
m.out7 <- matchit(f7, data = mydata,method = "nearest", ratio = 1)
dbWriteTable(con2, m.data6$ZKEY, name = "MATCHED_ZKEYS_HVAC_SA", append=TRUE, row.names=FALSE, overwrite=TRUE)
dbSendUpdate(con2,"ALTER TABLE AAI8260.MATCHED_ZKEYS_HVAC_SA RENAME COLUMN VALUE TO ZKEY")
dbSendUpdate(con2,"grant select on AAI8260.MATCHED_ZKEYS_HVAC_SA to public")
dbWriteTable(con2, m.data7$ZKEY, name = "MATCHED_ZKEYS_LYON", append=TRUE, row.names=FALSE, overwrite=TRUE)
dbSendUpdate(con2,"ALTER TABLE AAI8260.MATCHED_ZKEYS_LYON RENAME COLUMN VALUE TO ZKEY")
dbSendUpdate(con2,"grant select on AAI8260.MATCHED_ZKEYS_LYON to public")
m.data6 <- match.data(m.out6)
m.data7 <- match.data(m.out7)
dbWriteTable(con2, m.data6$ZKEY, name = "MATCHED_ZKEYS_HVAC_SA", append=TRUE, row.names=FALSE, overwrite=TRUE)
dbSendUpdate(con2,"ALTER TABLE AAI8260.MATCHED_ZKEYS_HVAC_SA RENAME COLUMN VALUE TO ZKEY")
dbSendUpdate(con2,"grant select on AAI8260.MATCHED_ZKEYS_HVAC_SA to public")
dbWriteTable(con2, m.data7$ZKEY, name = "MATCHED_ZKEYS_LYON", append=TRUE, row.names=FALSE, overwrite=TRUE)
dbSendUpdate(con2,"ALTER TABLE AAI8260.MATCHED_ZKEYS_LYON RENAME COLUMN VALUE TO ZKEY")
dbSendUpdate(con2,"grant select on AAI8260.MATCHED_ZKEYS_LYON to public")
plot(m.out6, type = "hist")
plot(m.out7, type = "hist")
m.out4 <- matchit(f4, data = mydata,method = "nearest", ratio = 1)
m.out5 <- matchit(f5, data = mydata,method = "nearest", ratio = 1)
plot(m.out4, type = "hist")
plot(m.out5, type = "hist")
